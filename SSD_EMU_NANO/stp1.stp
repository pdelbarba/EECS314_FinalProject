<session jtag_chain="USB-Blaster [USB-0]" jtag_device="@1: EP4SGX230(.|ES) (0x024090DD)" sof_file="">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="1"/>
      <single attribute="data horizontal scroll position" value="50354"/>
      <single attribute="data vertical scroll position" value="0"/>
      <single attribute="setup horizontal scroll position" value="0"/>
      <single attribute="setup vertical scroll position" value="0"/>
      <single attribute="zoom level denominator" value="1"/>
      <single attribute="zoom level numerator" value="8"/>
      <single attribute="zoom offset denominator" value="1"/>
      <single attribute="zoom offset numerator" value="8192"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2012/11/04 20:38:25  #0">
      <clock name="OSC_50_BANK2" polarity="posedge" tap_mode="probeonly"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="65536" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[17]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[18]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[19]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[20]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[21]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[22]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[23]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[24]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[25]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[26]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[27]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[28]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[29]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[30]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[31]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_SCHED" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[9]" tap_mode="probeonly" type="register"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[17]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[18]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[19]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[20]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[21]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[22]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[23]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[24]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[25]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[26]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[27]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[28]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[29]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[30]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[31]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_SCHED" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[9]" tap_mode="probeonly" type="register"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[14]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[15]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[16]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[17]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[18]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[19]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[20]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[21]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[22]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[23]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[24]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[25]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[26]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[27]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[28]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[29]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[30]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[31]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[9]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_SCHED" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[0]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[10]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[11]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[12]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[13]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[1]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[2]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[3]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[4]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[5]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[6]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[7]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[8]" tap_mode="probeonly" type="register"/>
          <wire name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[9]" tap_mode="probeonly" type="register"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[31]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[30]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[29]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[28]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[27]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[26]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[25]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[24]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[23]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[22]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[21]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[20]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[19]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[18]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[17]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[16]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[15]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[14]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[0]"/>
          </bus>
          <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT"/>
          <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_SCHED"/>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[16]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[15]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[14]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[0]"/>
          </bus>
        </data_view>
        <setup_view>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[31]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[30]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[29]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[28]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[27]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[26]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[25]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[24]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[23]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[22]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[21]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[20]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[19]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[18]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[17]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[16]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[15]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[14]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|data_out[0]"/>
          </bus>
          <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT"/>
          <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_SCHED"/>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|result[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[16]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[15]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[14]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[13]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[12]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[11]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[10]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[9]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[8]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[7]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[6]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[5]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[4]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[3]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[2]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[1]"/>
            <net is_signal_inverted="no" name="proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|address_out[0]"/>
          </bus>
        </setup_view>
      </presentation>
      <trigger attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2012/11/04 20:38:25  #1" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="8192" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">'proto1:u0|MBC_MEM_CFG:mbc_mem_cfg_0|en_cfg_LUT' == rising edge
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>00000000000000000000000000000000000000000000000000000000000000000
            <pwr_up_transitional>00000000000000000000000000000000000000000000000000000000000000000</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics/>
  <static_plugin_mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="data log widget visible" value="1"/>
    <single attribute="hierarchy widget visible" value="1"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="column width" size="23" value="34,34,251,74,68,70,88,88,98,98,88,88,110,101,101,101,101,101,101,101,101,107,78"/>
    <multi attribute="frame size" size="2" value="1092,987"/>
    <multi attribute="jtag widget size" size="2" value="370,139"/>
  </global_info>
</session>
